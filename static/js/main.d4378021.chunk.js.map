{"version":3,"sources":["App.tsx","index.tsx"],"names":["getRandomName","value","Date","now","toString","slice","App","state","visible","today","clockName","timerToday","timerClockName","this","addSetIntervals","document","addEventListener","setState","event","preventDefault","clearInterval","console","info","toUTCString","prev","debug","window","setInterval","newDate","newClockName","className","React","Component","ReactDOM","render","getElementById"],"mappings":"sNAIA,SAASA,IACP,IAAMC,EAAQC,KAAKC,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBJ,GAGX,IAAMK,EAAb,4MACEC,MAIK,CACHC,SAAS,EACTC,MAAO,IAAIP,KACXQ,UAAW,WARf,EAWEC,WAAa,EAXf,EAaEC,eAAiB,EAbnB,uDAeE,WAAqB,IAAD,OAClBC,KAAKC,kBAELC,SAASC,iBAAiB,SAAS,WACjC,EAAKC,SAAS,CAAET,SAAS,IACzB,EAAKM,qBAGPC,SAASC,iBAAiB,eAAe,SAACE,GACxCA,EAAMC,iBACN,EAAKF,SAAS,CAAET,SAAS,IACzBY,cAAc,EAAKT,YACnBS,cAAc,EAAKR,qBA3BzB,qBA+BE,WACEC,KAAKI,SAAS,CAAER,MAAO,IAAIP,OAE3BmB,QAAQC,KAAKT,KAAKN,MAAME,MAAMc,cAAclB,OAAO,IAAK,MAlC5D,0BAqCE,WACE,IAAMmB,EAAOX,KAAKN,MAAMG,UAExBG,KAAKI,SAAS,CAAEP,UAAWV,MAE3BqB,QAAQI,MAAR,uBAA8BD,EAA9B,eAAyCX,KAAKN,MAAMG,cA1CxD,6BA6CE,WAAmB,IAAD,OAChBG,KAAKF,WAAae,OAAOC,aAAY,kBAAM,EAAKC,YAAW,KAC3Df,KAAKD,eAAiBc,OAAOC,aAAY,kBAAM,EAAKE,iBAAgB,QA/CxE,oBAkDE,WACE,MAAsChB,KAAKN,MAAnCG,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,MAAOD,EAA1B,EAA0BA,QAE1B,OACE,sBAAKsB,UAAU,MAAf,UACE,6CACCtB,EAEG,sBAAKsB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGpB,IAGF,YAED,sBAAMoB,UAAU,cAAhB,SACGrB,EAAMc,cAAclB,OAAO,IAAK,QAIpC,UAtEb,GAAyB0B,IAAMC,WCP/BC,IAASC,OACP,cAAC,EAAD,IACAnB,SAASoB,eAAe,W","file":"static/js/main.d4378021.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n// import { Clock } from './Child';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component {\n  state: Readonly<{\n    today: Date,\n    clockName: string,\n    visible: boolean,\n  }> = {\n    visible: true,\n    today: new Date(),\n    clockName: 'Clock-0',\n  };\n\n  timerToday = 0;\n\n  timerClockName = 0;\n\n  componentDidMount() {\n    this.addSetIntervals();\n\n    document.addEventListener('click', () => {\n      this.setState({ visible: true });\n      this.addSetIntervals();\n    });\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ visible: false });\n      clearInterval(this.timerToday);\n      clearInterval(this.timerClockName);\n    });\n  }\n\n  newDate() {\n    this.setState({ today: new Date() });\n    // eslint-disable-next-line no-console\n    console.info(this.state.today.toUTCString().slice(-12, -4));\n  }\n\n  newClockName() {\n    const prev = this.state.clockName;\n\n    this.setState({ clockName: getRandomName() });\n    // eslint-disable-next-line no-console\n    console.debug(`Renamed from ${prev} to ${this.state.clockName}`);\n  }\n\n  addSetIntervals() {\n    this.timerToday = window.setInterval(() => this.newDate(), 1000);\n    this.timerClockName = window.setInterval(() => this.newClockName(), 3300);\n  }\n\n  render(): React.ReactNode {\n    const { clockName, today, visible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {visible\n          ? (\n            <div className=\"Clock\">\n              <strong className=\"Clock__name\">\n                {clockName}\n              </strong>\n\n              {' time is '}\n\n              <span className=\"Clock__time\">\n                {today.toUTCString().slice(-12, -4)}\n              </span>\n            </div>\n          )\n          : ('')}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}